{"version":3,"sources":["components/getCurrentUTC.js","components/convertToUTC.js","components/Environments.js","components/buttonStatus.js","components/Environment.js","components/Service.js","index.js","App.js"],"names":["getCurrentUTC","now","Date","toISOString","slice","replace","convertToUTC","epochTime","date","setUTCSeconds","time","error","console","log","Environments","cardWidth","width","marginTop","marginLeft","useState","environments","setEnv","envStatus","status","useEffect","a","async","axios","data","responseData","getEnv","loading","aria-label","className","style","margin","float","aria-current","to","Array","from","map","env","environment","param","textDecoration","timeUpdated","btnColor","Environment","props","match","params","display","id","arn","service","UncontrolledCollapse","toggler","pathname","healthCheck","Service","setService","getService","serv","class","version","render","exact","path","component","document","querySelector"],"mappings":"4OAAe,SAASA,IACtB,IAAMC,EAAMC,KAAKD,MAMjB,OALW,IAAIC,KAAKD,GACjBE,cACAC,MAAM,GAAI,GACVC,QAAQ,IAAK,IACbA,QAAQ,IAAK,KCNH,SAASC,EAAaC,GACnC,IACE,IACIC,EADI,IAAIN,KAAK,GACJO,cAAcF,GACvBG,EAAO,IAAIR,KAAKM,GACjBL,cACAC,MAAM,GAAI,GACVC,QAAQ,IAAK,IACbA,QAAQ,IAAK,KAChB,MAAOM,GACPC,QAAQC,IAAIF,GAEd,OAAOD,ECLM,SAASI,IACtB,IAIIC,EAAY,CACdC,MAAO,UACPC,UAAW,OACXC,WAAY,QARuB,EAYNC,mBAXjB,CACZC,aAAc,KAFqB,mBAY9BA,EAZ8B,KAYhBC,EAZgB,KA6BrC,SAASC,EAAUC,GACjB,OAAQA,GACN,IAAK,QACH,MAAO,iCACT,IAAK,UACH,MAAO,kCACT,IAAK,OACH,MAAO,+BACT,IAAK,KACH,MAAO,kCACT,IAAK,WACH,MAAO,oCACT,QACE,MAAO,QAKb,OAhCAC,qBAAU,YACO,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEUE,IAAM,wEAFhB,gBAELC,EAFK,EAELA,KAIRP,EAAOO,EAAKC,cANC,qCAUfC,KACC,IAoBIV,EAAaW,QAClB,2CAEA,6BACE,yBAAKC,aAAW,cACd,wBAAIC,UAAU,cACZ,yBACEC,MAAO,CACLC,OAAQ,sBACRnB,MAAO,SAGT,yBAAKkB,MAAO,CAAEE,MAAO,SACnB,wBAAIH,UAAU,yBAAyBI,eAAa,QAClD,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAGJ,yBAAKJ,MAAO,CAAEE,MAAO,UAAYpC,QAKvC,yBACEkC,MAAO,CACLC,OAAQ,wBACRnB,MAAO,SAGT,4BACE,0BAAMkB,MAAO,CAAEC,OAAQ,SAAvB,wBAEDI,MAAMC,KAAKpB,GAAcqB,KAAI,SAAAC,GAAG,OAC/B,kBAAC,IAAD,CACEJ,GAAII,EAAIC,YACRC,MAAOF,EAAIC,YACXT,MAAO,CACLW,eAAgB,SAGlB,yBAAKZ,UAAWX,EAAUoB,EAAInB,QAASW,MAAOnB,GAC5C,yBAAKkB,UAAU,eACb,wBAAIC,MAAO,CAAEE,MAAO,SAAWM,EAAIC,aACnC,wBAAIT,MAAO,CAAEE,MAAO,UACjBM,EAAInB,OADP,oCAEGjB,EAAaoC,EAAII,uBClGrB,SAASC,EAASxB,GAC/B,OAAQA,GACN,IAAK,MACH,MAAO,iBACT,IAAK,UACH,MAAO,kBACT,IAAK,OACH,MAAO,eACT,IAAK,QACH,MAAO,kBACT,IAAK,WACH,MAAO,oBACT,QACE,MAAO,iB,6BCHE,SAASyB,EAAYC,GAClC,IAIIlC,EAAY,CACdC,MAAO,UACPC,UAAW,OACXC,WAAY,QAR2B,EAYVC,mBAXjB,CACZC,aAAc,KAFyB,mBAYlCA,EAZkC,KAYpBC,EAZoB,KA6BzC,OAdAG,qBAAU,YACO,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEUE,IAAM,kFAAD,OACwDsB,EAAMC,MAAMC,OAAOR,eAH1F,gBAELf,EAFK,EAELA,KAIRP,EAAOO,EAAKC,cANC,qCAUfC,KACC,CAACmB,EAAMC,MAAMC,OAAOR,cAEhBvB,EAAaW,QAClB,2CAEA,6BACE,yBAAKC,aAAW,cACd,wBAAIC,UAAU,cACZ,yBACEC,MAAO,CACLC,OAAQ,sBACRnB,MAAO,SAGT,yBACEkB,MAAO,CACLE,MAAO,OACPgB,QAAS,gBAGX,wBAAInB,UAAU,mBACZ,kBAAC,IAAD,CAAMK,GAAG,KAAT,SAEF,wBAAIL,UAAU,yBAAyBI,eAAa,QACjDY,EAAMC,MAAMC,OAAOR,cAGxB,yBACET,MAAO,CACLE,MAAO,UAGRpC,QAMT,yBACEkC,MAAO,CACLC,OAAQ,wBACRnB,MAAO,SAGT,4BACE,0BACEkB,MAAO,CACLC,OAAQ,SAGTc,EAAMC,MAAMC,OAAOR,cAGvBJ,MAAMC,KAAKpB,GAAcqB,KAAI,SAAAC,GAAG,OAC/B,yBAAKT,UAAW,OAAQC,MAAOnB,GAC7B,4BACEkB,UAAWc,EAASL,EAAInB,QACxB8B,GAAIX,EAAIY,IAAIjD,QAAQ,SAAU,KAE9B,wBACE6B,MAAO,CACLE,MAAO,SAGRM,EAAIa,SAEP,wBACErB,MAAO,CACLE,MAAO,UAGR9B,EAAaoC,EAAII,eAGtB,kBAACU,EAAA,EAAD,CAAsBC,QAASf,EAAIY,IAAIjD,QAAQ,SAAU,KACvD,kBAAC,IAAD,CACEiC,GAAI,CACFoB,SAAUhB,EAAIC,YAAc,IAAMD,EAAIa,SAExCrB,MAAO,CACLW,eAAgB,SAGlB,yBAAKZ,UAAU,aACb,uBAAGA,UAAU,cACb,uBACEC,MAAO,CACLE,MAAO,SAIP,kBAAC,IAAD,CACEiB,GAAG,cACHzB,KAAMc,EAAIiB,wBCvHnB,SAASC,EAAQX,GAC9B,IAIIlC,EAAY,CACdC,MAAO,UACPC,UAAW,OACXC,WAAY,QARuB,EAYPC,mBAXhB,CACZoC,QAAS,KAF0B,mBAY9BA,EAZ8B,KAYrBM,EAZqB,KA8BrC,OAfArC,qBAAU,YACW,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACME,IAAM,kFAAD,OACwDsB,EAAMC,MAAMC,OAAOR,YAD3E,oBACkGM,EAAMC,MAAMC,OAAOI,WAFhI,gBACT3B,EADS,EACTA,KAKRiC,EAAWjC,EAAKC,cANC,qCAUnBiC,KACC,CAACb,EAAMC,MAAMC,OAAOR,YAAaM,EAAMC,MAAMC,OAAOI,UAGhDA,EAAQxB,QACb,2CAEA,6BACE,yBAAKC,aAAW,cACd,wBAAIC,UAAU,cACZ,yBACEC,MAAO,CACLC,OAAQ,sBACRnB,MAAO,SAGT,yBAAKkB,MAAO,CAAEE,MAAO,OAAQgB,QAAS,gBACpC,wBAAInB,UAAU,mBACZ,kBAAC,IAAD,CAAMK,GAAG,KAAT,SAEF,wBAAIL,UAAU,mBACZ,kBAAC,IAAD,CAAMK,GAAI,CAAEoB,SAAU,IAAMT,EAAMC,MAAMC,OAAOR,cAC5CM,EAAMC,MAAMC,OAAOR,cAGxB,wBAAIV,UAAU,yBAAyBI,eAAa,QACjDY,EAAMC,MAAMC,OAAOI,UAGxB,yBAAKrB,MAAO,CAAEE,MAAO,UAAYpC,QAKvC,yBACEkC,MAAO,CACLC,OAAQ,wBACRnB,MAAO,SAGT,4BACE,0BAAMkB,MAAO,CAAEC,OAAQ,SACpBc,EAAMC,MAAMC,OAAOR,YADtB,MACsCM,EAAMC,MAAMC,OAAOI,UAG1DhB,MAAMC,KAAKe,GAASd,KAAI,SAAAsB,GAAI,OAC3B,yBAAK9B,UAAW,OAAQC,MAAOnB,GAC7B,4BACEiD,MAAOjB,EAASgB,EAAKxC,QACrB8B,GAAIU,EAAKT,IAAIjD,QAAQ,SAAU,KAE/B,wBAAI6B,MAAO,CAAEE,MAAO,SAAW2B,EAAKT,KACpC,wBAAIpB,MAAO,CAAEE,MAAO,UAApB,mCAEG2B,EAAKE,QAFR,mCAIG3D,EAAayD,EAAKjB,eAGvB,kBAACU,EAAA,EAAD,CAAsBC,QAASM,EAAKT,IAAIjD,QAAQ,SAAU,KACxD,yBAAK4B,UAAU,aACb,uBAAGA,UAAU,aAET,kBAAC,IAAD,CACEoB,GAAG,cACHzB,KAAMmC,EAAKJ,uB,MChGjCO,iBACE,kBAAC,IAAD,KACE,mBCDW,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWvD,IACvC,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,sBAAsBC,UAAWrB,IACnD,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,+BAA+BC,UAAWT,ODJ9D,OAEFU,SAASC,cAAc,Y","file":"static/js/main.189f5ad6.chunk.js","sourcesContent":["export default function getCurrentUTC() {\n  const now = Date.now(); // Unix timestamp in milliseconds\n  var time = new Date(now)\n    .toISOString()\n    .slice(0, -5)\n    .replace(\"Z\", \"\")\n    .replace(\"T\", \" \");\n  return time;\n}\n","export default function convertToUTC(epochTime) {\n  try {\n    var d = new Date(0);\n    var date = d.setUTCSeconds(epochTime);\n    var time = new Date(date)\n      .toISOString()\n      .slice(0, -5)\n      .replace(\"Z\", \"\")\n      .replace(\"T\", \" \");\n  } catch (error) {\n    console.log(error);\n  }\n  return time;\n}\n","// src/components/Environments.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport getCurrentUTC from \"./getCurrentUTC\";\nimport convertToUTC from \"./convertToUTC\";\n\nexport default function Environments() {\n  const state = {\n    environments: []\n  };\n\n  var cardWidth = {\n    width: \"inherit\",\n    marginTop: \"25px\",\n    marginLeft: \"10px\"\n  };\n\n  // Getter and setter for user state\n  const [environments, setEnv] = useState(state);\n\n  // Using useEffect to retrieve data from an API (similar to componentDidMount in a class)\n  useEffect(() => {\n    const getEnv = async () => {\n      // Pass our param (:id) to the API call\n      const { data } = await axios(\n        `https://main-healthdash.yvrcalabrio.com/healthdash-app/healthcheck/`\n      );\n      // Update state\n      setEnv(data.responseData);\n    };\n\n    // Invoke the async function\n    getEnv();\n  }, []); // Don't forget the `[]`, which will prevent useEffect from running in an infinite loop\n\n  function envStatus(status) {\n    switch (status) {\n      case \"ERROR\":\n        return \"card text-white bg-danger mb-3\";\n      case \"WARNING\":\n        return \"card text-white bg-warning mb-3\";\n      case \"INFO\":\n        return \"card text-white bg-info mb-3\";\n      case \"OK\":\n        return \"card text-white bg-success mb-3\";\n      case \"OBSOLETE\":\n        return \"card text-white bg-secondary mb-3\";\n      default:\n        return \"card\";\n    }\n  }\n\n  // Return a table with some data from the API.\n  return environments.loading ? (\n    <div>Loading...</div>\n  ) : (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <div\n            style={{\n              margin: \"0px 80px auto 100px\",\n              width: \"100%\"\n            }}\n          >\n            <div style={{ float: \"left\" }}>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                <Link to=\"/\">Home</Link>\n              </li>\n            </div>\n            <div style={{ float: \"right\" }}>{getCurrentUTC()}</div>\n          </div>\n        </ol>\n      </nav>\n\n      <div\n        style={{\n          margin: \"100px 96px auto 100px\",\n          width: \"auto\"\n        }}\n      >\n        <h1>\n          <span style={{ margin: \"10px\" }}>Calabrio HealthDash</span>\n        </h1>\n        {Array.from(environments).map(env => (\n          <Link\n            to={env.environment}\n            param={env.environment}\n            style={{\n              textDecoration: \"none\"\n            }}\n          >\n            <div className={envStatus(env.status)} style={cardWidth}>\n              <div className=\"card-header\">\n                <h5 style={{ float: \"left\" }}>{env.environment}</h5>\n                <h5 style={{ float: \"right\" }}>\n                  {env.status} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  {convertToUTC(env.timeUpdated)}\n                </h5>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n","export default function btnColor(status) {\n  switch (status) {\n    case \"RED\":\n      return \"btn btn-danger\";\n    case \"WARNING\":\n      return \"btn btn-warning\";\n    case \"INFO\":\n      return \"btn btn-info\";\n    case \"GREEN\":\n      return \"btn btn-success\";\n    case \"OBSOLETE\":\n      return \"btn btn-secondary\";\n    default:\n      return \"btn btn-light\";\n  }\n}\n","// src/components/Environments.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport getCurrentUTC from \"./getCurrentUTC\";\nimport convertToUTC from \"./convertToUTC\";\nimport btnColor from \"./buttonStatus\";\nimport { UncontrolledCollapse } from \"reactstrap\";\nimport JSONPretty from \"react-json-pretty\";\n\nexport default function Environment(props) {\n  const state = {\n    environments: []\n  };\n\n  var cardWidth = {\n    width: \"inherit\",\n    marginTop: \"25px\",\n    marginLeft: \"10px\"\n  };\n\n  // Getter and setter for Env state\n  const [environments, setEnv] = useState(state);\n\n  // Using useEffect to retrieve data from an API (similar to componentDidMount in a class)\n  useEffect(() => {\n    const getEnv = async () => {\n      // Pass our param (:environment) to the API call\n      const { data } = await axios(\n        `https://main-healthdash.yvrcalabrio.com/healthdash-app/healthcheck/environment/${props.match.params.environment}`\n      );\n      // Update state\n      setEnv(data.responseData);\n    };\n\n    // Invoke the async function\n    getEnv();\n  }, [props.match.params.environment]); // Don't forget the `[]`, which will prevent useEffect from running in an infinite loop\n\n  return environments.loading ? (\n    <div>Loading...</div>\n  ) : (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <div\n            style={{\n              margin: \"0px 80px auto 100px\",\n              width: \"100%\"\n            }}\n          >\n            <div\n              style={{\n                float: \"left\",\n                display: \"inline-flex\"\n              }}\n            >\n              <li className=\"breadcrumb-item\">\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                {props.match.params.environment}\n              </li>\n            </div>\n            <div\n              style={{\n                float: \"right\"\n              }}\n            >\n              {getCurrentUTC()}\n            </div>\n          </div>\n        </ol>\n      </nav>\n\n      <div\n        style={{\n          margin: \"100px 96px auto 100px\",\n          width: \"auto\"\n        }}\n      >\n        <h1>\n          <span\n            style={{\n              margin: \"10px\"\n            }}\n          >\n            {props.match.params.environment}\n          </span>\n        </h1>\n        {Array.from(environments).map(env => (\n          <div className={\"card\"} style={cardWidth}>\n            <button\n              className={btnColor(env.status)}\n              id={env.arn.replace(/[0-9]/g, \"\")}\n            >\n              <h5\n                style={{\n                  float: \"left\"\n                }}\n              >\n                {env.service}\n              </h5>\n              <h5\n                style={{\n                  float: \"right\"\n                }}\n              >\n                {convertToUTC(env.timeUpdated)}\n              </h5>\n            </button>\n            <UncontrolledCollapse toggler={env.arn.replace(/[0-9]/g, \"\")}>\n              <Link\n                to={{\n                  pathname: env.environment + \"/\" + env.service\n                }}\n                style={{\n                  textDecoration: \"none\"\n                }}\n              >\n                <div className=\"card-body\">\n                  <p className=\"card-text\"></p>\n                  <p\n                    style={{\n                      float: \"left\"\n                    }}\n                  >\n                    {\n                      <JSONPretty\n                        id=\"json-pretty\"\n                        data={env.healthCheck}\n                      ></JSONPretty>\n                    }\n                  </p>\n                </div>\n              </Link>\n            </UncontrolledCollapse>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","// src/components/Environments.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport getCurrentUTC from \"./getCurrentUTC\";\nimport convertToUTC from \"./convertToUTC\";\nimport btnColor from \"./buttonStatus\";\nimport JSONPretty from \"react-json-pretty\";\n\nimport { UncontrolledCollapse } from \"reactstrap\";\n\nexport default function Service(props) {\n  const state = {\n    service: []\n  };\n\n  var cardWidth = {\n    width: \"inherit\",\n    marginTop: \"25px\",\n    marginLeft: \"10px\"\n  };\n\n  // Getter and setter for service\n  const [service, setService] = useState(state);\n\n  // Using useEffect to retrieve data from an API (similar to componentDidMount in a class)\n  useEffect(() => {\n    const getService = async () => {\n      const { data } = await axios(\n        `https://main-healthdash.yvrcalabrio.com/healthdash-app/healthcheck/environment/${props.match.params.environment}/service/${props.match.params.service}`\n      );\n\n      // Update state\n      setService(data.responseData);\n    };\n\n    // Invoke the async function\n    getService();\n  }, [props.match.params.environment, props.match.params.service]); // Don't forget the `[]`, which will prevent useEffect from running in an infinite loop\n\n  // Return a table with some data from the API.\n  return service.loading ? (\n    <div>Loading...</div>\n  ) : (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <div\n            style={{\n              margin: \"0px 80px auto 100px\",\n              width: \"100%\"\n            }}\n          >\n            <div style={{ float: \"left\", display: \"inline-flex\" }}>\n              <li className=\"breadcrumb-item\">\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"breadcrumb-item\">\n                <Link to={{ pathname: \"/\" + props.match.params.environment }}>\n                  {props.match.params.environment}\n                </Link>\n              </li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                {props.match.params.service}\n              </li>\n            </div>\n            <div style={{ float: \"right\" }}>{getCurrentUTC()}</div>\n          </div>\n        </ol>\n      </nav>\n\n      <div\n        style={{\n          margin: \"100px 96px auto 100px\",\n          width: \"auto\"\n        }}\n      >\n        <h1>\n          <span style={{ margin: \"10px\" }}>\n            {props.match.params.environment} - {props.match.params.service}\n          </span>\n        </h1>\n        {Array.from(service).map(serv => (\n          <div className={\"card\"} style={cardWidth}>\n            <button\n              class={btnColor(serv.status)}\n              id={serv.arn.replace(/[0-9]/g, \"\")}\n            >\n              <h5 style={{ float: \"left\" }}>{serv.arn}</h5>\n              <h5 style={{ float: \"right\" }}>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {serv.version}\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {convertToUTC(serv.timeUpdated)}\n              </h5>\n            </button>\n            <UncontrolledCollapse toggler={serv.arn.replace(/[0-9]/g, \"\")}>\n              <div className=\"card-body\">\n                <p className=\"card-text\">\n                  {\n                    <JSONPretty\n                      id=\"json-pretty\"\n                      data={serv.healthCheck}\n                    ></JSONPretty>\n                  }\n                </p>\n              </div>\n            </UncontrolledCollapse>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.querySelector(\"#root\")\n);\n","// src/App.js\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Environments from \"./components/Environments\";\nimport Environment from \"./components/Environment\";\nimport Service from \"./components/Service\";\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/react/\" component={Environments} />\n      <Route exact path=\"/react/:environment\" component={Environment} />\n      <Route exact path=\"/react/:environment/:service\" component={Service} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}